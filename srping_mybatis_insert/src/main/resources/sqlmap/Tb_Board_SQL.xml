<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 맵핑될 DAO 인터페이스의 Full name 을 줍니다. -->
<mapper namespace="com.tistory.pentode.service.dao.BoardDAO">

<resultMap id="boardVO" type="HashMap">
	<result property="num" column="NUM"/>
	<result property="reple" column="REPLE"/>
	<result property="name" column="NAME"/>
	<result property="title" column="TITLE"/>
	<result property="content" column="CONTENT"/>
	<result property="readCount" column="READ_COUNT"/>
	<result property="writeDate" column="WRITE_DATE"/>
</resultMap>

	<!-- id 속성은 DAO 의 메소드와 같아야 한다. 여기의 boardVO 는 mybatis-confg.xml 에 Alias 되어 있습니다. -->
	<select id="selectBoardList" resultType="boardVO"> 
	SELECT NUM
	     , NAME
	     , TITLE
	     , CONTENT
	     , READ_COUNT
	     , TO_CHAR(WRITE_DATE, 'yyyy-mm-dd') AS WRITE_DATE
	  FROM TB_BOARD 
	 ORDER BY NUM DESC
	</select>
	
<!-- 원뷰를 보여줍니다  -->
	<update id="oneViewReadCnt">
		UPDATE TB_BOARD SET READ_COUNT = READ_COUNT + 1 WHERE NUM=#{num}
	</update>
	<select id="selectOneView" resultType="boardVO">   
		SELECT NUM
		     , NAME
		     , TITLE
		     , TO_CHAR(CONTENT) AS CONTENT
		     , READ_COUNT
		     , TO_CHAR(WRITE_DATE, 'yyyy-mm-dd') AS WRITE_DATE
		  FROM TB_BOARD
		  WHERE NUM=#{num}
	</select>
<!-- 원뷰를 보여줍니다  -->


<!-- 페이징 결과를 보여줍니다 -->	
	<select id="pagingList" resultMap = "boardVO">
		SELECT * FROM(
		    SELECT A.NUM, (SELECT COUNT(*) FROM LITTLE_RE B WHERE B.NUM=A.NUM) AS REPLE, 
		    	   ROW_NUMBER() OVER(ORDER BY NUM DESC) zNUM, 
		    	   NAME, 
		    	   TITLE, 
		    	   READ_COUNT, 
		    	   TO_char(WRITE_DATE,'yyyy-mm-dd') AS WRITE_DATE
		    FROM TB_BOARD A
		    )X WHERE X.zNUM BETWEEN <if test='page == 1'> #{page} and (#{page}*#{pageShowRecod})</if>
		     <if test='page > 1'> (#{page}*#{pageShowRecod}) - #{pageShowRecod} + 1 and (#{page}*#{pageShowRecod})</if>
	</select>
<!-- 페이징 결과를 보여줍니다 -->	
	<select id="oneviewRepleCnt" resultType="int">
		
	</select>

	
<!-- 게시판의 총 레코드 수 입니다 -->	
	<select id="bottomPage" resultType="boardPage">
		SELECT COUNT(*) AS TOTAL_RECOD FROM TB_BOARD
	</select>
<!-- 게시판의 총 레코드 수 입니다 -->
	

<!-- 게시판 글 작성 입니다 -->
	<insert id="insertBoard">
		<!-- 게시글 작성 전에 글번호 1증가시킴! -->
		<selectKey resultType="int" keyProperty="num" order="BEFORE">
	        SELECT NVL(MAX(num),0)+1 FROM TB_BOARD
	    </selectKey>  
	INSERT INTO TB_BOARD (NUM, NAME, TITLE, CONTENT, READ_COUNT) 
		 VALUES (#{num}, #{name}, #{title}, rawtohex(#{content}), '0')
	</insert>
	<!-- JDBC 업로드시 자동 커밋 -->
<!-- 게시판 글 작성 입니다 -->	
	

<!-- 게시판 글 수정 -->	
	<update id="updateBoard">
		UPDATE TB_BOARD SET TITLE=#{title}, CONTENT=rawtohex(#{content}) WHERE NUM=#{num} 
	</update>
<!-- 게시판 글 수정 -->

	
<!-- 게시판 글 삭제 -->
	<delete id="deleteBoard">
		DELETE FROM TB_BOARD WHERE NUM=#{num}
	</delete>
<!-- 게시판 글 삭제 -->
	

<!-- 댓글 보기 -->

	<select id="showLittleReple" resultType="littleReView">
		SELECT NUM, MYNUM, NAME, CONTENT, TO_CHAR(WRITE_DATE, 'yyyy-mm-dd') AS WRITE_DATE, TO_CHAR(WRITE_DATE, 'hh24:mi:ss') AS WRITE_TIME 
		 FROM LITTLE_RE WHERE NUM = #{num} ORDER BY MYNUM desc
	</select>
<!-- 댓글 보기 -->

<!-- 댓글 삽입 -->
	<insert id="littleReInsert">
		<selectKey resultType="int" keyProperty="mynum" order="BEFORE">
	        SELECT NVL(MAX(mynum),0)+1 FROM LITTLE_RE WHERE NUM=#{num}
	    </selectKey> 
		INSERT INTO LITTLE_RE (NUM, MYNUM, NAME, CONTENT, WRITE_DATE) 
		VALUES (#{num}, #{mynum}, #{name}, #{content}, SYSTIMESTAMP)
	</insert>
	
<!-- 댓글 삭제 -->
	<delete id="littleReDelete">
		DELETE FROM LITTLE_RE WHERE NUM=#{num} AND MYNUM=#{mynum}
	</delete>

	<update id="littleReUpdate">
		UPDATE LITTLE_RE SET CONTENT=#{content} WHERE NUM=#{num} AND MYNUM=#{mynum}
	</update>
</mapper>
